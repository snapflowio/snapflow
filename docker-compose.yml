version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: snapflow
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8081:8081"
    entrypoint:
      - /entrypoint.sh
    environment:
      # Core Application
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-8081}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE:-false}
      
      # Website/CORS Configuration
      - DASHBOARD_URL=${DASHBOARD_URL}
      
      # Authentication
      - BETTER_AUTH_BASE_URL=${BETTER_AUTH_BASE_URL}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      
      # Database Configuration (PostgreSQL)
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
      # SMTP Configuration
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
      - SMTP_FROM_EMAIL_ADDRESS=${SMTP_FROM_EMAIL_ADDRESS}
      
      # Object Storage (S3/R2)
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_DEFAULT_BUCKET=${S3_DEFAULT_BUCKET}

  postgres:
    image: postgres:17-alpine
    container_name: new_postgres
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: new_redis
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: